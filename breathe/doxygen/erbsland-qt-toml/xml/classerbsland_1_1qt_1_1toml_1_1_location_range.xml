<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classerbsland_1_1qt_1_1toml_1_1_location_range" kind="class" language="C++" prot="public">
    <compoundname>erbsland::qt::toml::LocationRange</compoundname>
    <includes refid="_location_range_8hpp" local="no">erbsland/qt/toml/LocationRange.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classerbsland_1_1qt_1_1toml_1_1_location_range_1a7d9dc4950fbbc545e4f2e518d81529d1" prot="private" static="no" mutable="no">
        <type><ref refid="classerbsland_1_1qt_1_1toml_1_1_location" kindref="compound">Location</ref></type>
        <definition>Location erbsland::qt::toml::LocationRange::_begin</definition>
        <argsstring></argsstring>
        <name>_begin</name>
        <briefdescription>
<para>The begin location. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/qt/toml/LocationRange.hpp" line="100" column="14" bodyfile="erbsland/qt/toml/LocationRange.hpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classerbsland_1_1qt_1_1toml_1_1_location_range_1a00020ec8a4c31e44b4ae7ebe03e12688" prot="private" static="no" mutable="no">
        <type><ref refid="classerbsland_1_1qt_1_1toml_1_1_location" kindref="compound">Location</ref></type>
        <definition>Location erbsland::qt::toml::LocationRange::_end</definition>
        <argsstring></argsstring>
        <name>_end</name>
        <briefdescription>
<para>The end location. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/qt/toml/LocationRange.hpp" line="101" column="14" bodyfile="erbsland/qt/toml/LocationRange.hpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classerbsland_1_1qt_1_1toml_1_1_location_range_1a9feebf255da8031ceeb0b7938c1c7893" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr erbsland::qt::toml::LocationRange::LocationRange</definition>
        <argsstring>(const Location &amp;begin, const Location &amp;end) noexcept</argsstring>
        <name>LocationRange</name>
        <param>
          <type>const <ref refid="classerbsland_1_1qt_1_1toml_1_1_location" kindref="compound">Location</ref> &amp;</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const <ref refid="classerbsland_1_1qt_1_1toml_1_1_location" kindref="compound">Location</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new location range.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>begin</parametername>
</parameternamelist>
<parameterdescription>
<para>The beginning location. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end</parametername>
</parameternamelist>
<parameterdescription>
<para>The ending location. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/qt/toml/LocationRange.hpp" line="26" column="15" bodyfile="erbsland/qt/toml/LocationRange.hpp" bodystart="26" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classerbsland_1_1qt_1_1toml_1_1_location_range_1af5b77f432ccffd0613b69a4f7b9deac1" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr erbsland::qt::toml::LocationRange::LocationRange</definition>
        <argsstring>() noexcept=default</argsstring>
        <name>LocationRange</name>
        <briefdescription>
<para>Create a location range 1:1(0)-1:1(0). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/qt/toml/LocationRange.hpp" line="32" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classerbsland_1_1qt_1_1toml_1_1_location_range_1ae88943d37a2152ead5db7d98a1fea435" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto erbsland::qt::toml::LocationRange::begin</definition>
        <argsstring>() const noexcept -&gt; const Location &amp;</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the beginning of the location range.</para>
<para><simplesect kind="return"><para>The beginning location. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/qt/toml/LocationRange.hpp" line="45" column="21" bodyfile="erbsland/qt/toml/LocationRange.hpp" bodystart="45" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classerbsland_1_1qt_1_1toml_1_1_location_range_1a7d2eb53c697a65d3a616b935c4cf060c" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto erbsland::qt::toml::LocationRange::end</definition>
        <argsstring>() const noexcept -&gt; const Location &amp;</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the end of the location range.</para>
<para><simplesect kind="return"><para>The ending location. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/qt/toml/LocationRange.hpp" line="53" column="21" bodyfile="erbsland/qt/toml/LocationRange.hpp" bodystart="53" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classerbsland_1_1qt_1_1toml_1_1_location_range_1a605b4c1172ea514d3423c5fd4c5da6eb" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto erbsland::qt::toml::LocationRange::operator==</definition>
        <argsstring>(const LocationRange &amp;other) const noexcept -&gt; bool</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classerbsland_1_1qt_1_1toml_1_1_location_range" kindref="compound">LocationRange</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compare two location ranges.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The other location range for comparison. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of the comparison. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/qt/toml/LocationRange.hpp" line="63" column="20" bodyfile="erbsland/qt/toml/LocationRange.hpp" bodystart="63" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classerbsland_1_1qt_1_1toml_1_1_location_range_1aef2734d39c922950f62f76a6986622c7" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto erbsland::qt::toml::LocationRange::operator!=</definition>
        <argsstring>(const LocationRange &amp;other) const noexcept -&gt; bool</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classerbsland_1_1qt_1_1toml_1_1_location_range" kindref="compound">LocationRange</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compare two location ranges.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The other location range for comparison. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of the comparison. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/qt/toml/LocationRange.hpp" line="67" column="20" bodyfile="erbsland/qt/toml/LocationRange.hpp" bodystart="67" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classerbsland_1_1qt_1_1toml_1_1_location_range_1afd518c7f2a6479ac2f120e4751c0d122" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void erbsland::qt::toml::LocationRange::extend</definition>
        <argsstring>(const LocationRange &amp;other) noexcept</argsstring>
        <name>extend</name>
        <param>
          <type>const <ref refid="classerbsland_1_1qt_1_1toml_1_1_location_range" kindref="compound">LocationRange</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extend the current location range.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The other location range to extend with. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/qt/toml/LocationRange.hpp" line="76" column="10" bodyfile="erbsland/qt/toml/LocationRange.cpp" bodystart="10" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="classerbsland_1_1qt_1_1toml_1_1_location_range_1a6ae12608e7a4b6b43f3c1267a44c7bea" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void erbsland::qt::toml::LocationRange::extend</definition>
        <argsstring>(const Location &amp;loc) noexcept</argsstring>
        <name>extend</name>
        <param>
          <type>const <ref refid="classerbsland_1_1qt_1_1toml_1_1_location" kindref="compound">Location</ref> &amp;</type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extend the current location range.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loc</parametername>
</parameternamelist>
<parameterdescription>
<para>The location to extend with. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/qt/toml/LocationRange.hpp" line="82" column="10" bodyfile="erbsland/qt/toml/LocationRange.cpp" bodystart="16" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classerbsland_1_1qt_1_1toml_1_1_location_range_1a9e71ca804da52321eac325135da24861" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto erbsland::qt::toml::LocationRange::toString</definition>
        <argsstring>(LocationFormat format) const noexcept -&gt; QString</argsstring>
        <name>toString</name>
        <param>
          <type><ref refid="namespaceerbsland_1_1qt_1_1toml_1a06a315dbcc1a56376b3d1a00650e177a" kindref="member">LocationFormat</ref></type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert this location range into a string.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>The format of the output. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A string with the format. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/qt/toml/LocationRange.hpp" line="90" column="11" bodyfile="erbsland/qt/toml/LocationRange.cpp" bodystart="22" bodyend="24"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classerbsland_1_1qt_1_1toml_1_1_location_range_1a1ec1e4971fb89e891bb7f22d0a50431a" prot="private" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>erbsland::qt::toml::LocationRange::LocationRange</definition>
        <argsstring>(const LocationRange &amp;) noexcept=default</argsstring>
        <name>LocationRange</name>
        <param>
          <type>const <ref refid="classerbsland_1_1qt_1_1toml_1_1_location_range" kindref="compound">LocationRange</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>copy </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/qt/toml/LocationRange.hpp" line="35" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classerbsland_1_1qt_1_1toml_1_1_location_range_1a97fe08f8f285c1a56d289b02f9522073" prot="private" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto erbsland::qt::toml::LocationRange::operator=</definition>
        <argsstring>(const LocationRange &amp;) noexcept -&gt; LocationRange &amp;=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classerbsland_1_1qt_1_1toml_1_1_location_range" kindref="compound">LocationRange</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>assign </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/qt/toml/LocationRange.hpp" line="38" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classerbsland_1_1qt_1_1toml_1_1_location_range_1a13815ae973cb65434d13c94c8a835dff" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr static auto</type>
        <definition>constexpr static auto erbsland::qt::toml::LocationRange::createNotSet</definition>
        <argsstring>() noexcept -&gt; LocationRange</argsstring>
        <name>createNotSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a location range that is not set. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/qt/toml/LocationRange.hpp" line="95" column="28" bodyfile="erbsland/qt/toml/LocationRange.hpp" bodystart="95" bodyend="97"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The range covered by two locations in a file. </para>
    </detaileddescription>
    <location file="erbsland/qt/toml/LocationRange.hpp" line="17" column="1" bodyfile="erbsland/qt/toml/LocationRange.hpp" bodystart="17" bodyend="102"/>
    <listofallmembers>
      <member refid="classerbsland_1_1qt_1_1toml_1_1_location_range_1a7d9dc4950fbbc545e4f2e518d81529d1" prot="private" virt="non-virtual"><scope>erbsland::qt::toml::LocationRange</scope><name>_begin</name></member>
      <member refid="classerbsland_1_1qt_1_1toml_1_1_location_range_1a00020ec8a4c31e44b4ae7ebe03e12688" prot="private" virt="non-virtual"><scope>erbsland::qt::toml::LocationRange</scope><name>_end</name></member>
      <member refid="classerbsland_1_1qt_1_1toml_1_1_location_range_1ae88943d37a2152ead5db7d98a1fea435" prot="public" virt="non-virtual"><scope>erbsland::qt::toml::LocationRange</scope><name>begin</name></member>
      <member refid="classerbsland_1_1qt_1_1toml_1_1_location_range_1a13815ae973cb65434d13c94c8a835dff" prot="public" virt="non-virtual"><scope>erbsland::qt::toml::LocationRange</scope><name>createNotSet</name></member>
      <member refid="classerbsland_1_1qt_1_1toml_1_1_location_range_1a7d2eb53c697a65d3a616b935c4cf060c" prot="public" virt="non-virtual"><scope>erbsland::qt::toml::LocationRange</scope><name>end</name></member>
      <member refid="classerbsland_1_1qt_1_1toml_1_1_location_range_1afd518c7f2a6479ac2f120e4751c0d122" prot="public" virt="non-virtual"><scope>erbsland::qt::toml::LocationRange</scope><name>extend</name></member>
      <member refid="classerbsland_1_1qt_1_1toml_1_1_location_range_1a6ae12608e7a4b6b43f3c1267a44c7bea" prot="public" virt="non-virtual"><scope>erbsland::qt::toml::LocationRange</scope><name>extend</name></member>
      <member refid="classerbsland_1_1qt_1_1toml_1_1_location_range_1a9feebf255da8031ceeb0b7938c1c7893" prot="public" virt="non-virtual"><scope>erbsland::qt::toml::LocationRange</scope><name>LocationRange</name></member>
      <member refid="classerbsland_1_1qt_1_1toml_1_1_location_range_1af5b77f432ccffd0613b69a4f7b9deac1" prot="public" virt="non-virtual"><scope>erbsland::qt::toml::LocationRange</scope><name>LocationRange</name></member>
      <member refid="classerbsland_1_1qt_1_1toml_1_1_location_range_1a1ec1e4971fb89e891bb7f22d0a50431a" prot="private" virt="non-virtual"><scope>erbsland::qt::toml::LocationRange</scope><name>LocationRange</name></member>
      <member refid="classerbsland_1_1qt_1_1toml_1_1_location_range_1aef2734d39c922950f62f76a6986622c7" prot="public" virt="non-virtual"><scope>erbsland::qt::toml::LocationRange</scope><name>operator!=</name></member>
      <member refid="classerbsland_1_1qt_1_1toml_1_1_location_range_1a97fe08f8f285c1a56d289b02f9522073" prot="private" virt="non-virtual"><scope>erbsland::qt::toml::LocationRange</scope><name>operator=</name></member>
      <member refid="classerbsland_1_1qt_1_1toml_1_1_location_range_1a605b4c1172ea514d3423c5fd4c5da6eb" prot="public" virt="non-virtual"><scope>erbsland::qt::toml::LocationRange</scope><name>operator==</name></member>
      <member refid="classerbsland_1_1qt_1_1toml_1_1_location_range_1a9e71ca804da52321eac325135da24861" prot="public" virt="non-virtual"><scope>erbsland::qt::toml::LocationRange</scope><name>toString</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
