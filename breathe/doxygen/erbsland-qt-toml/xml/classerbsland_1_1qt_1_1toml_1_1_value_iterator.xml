<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classerbsland_1_1qt_1_1toml_1_1_value_iterator" kind="class" language="C++" prot="public">
    <compoundname>erbsland::qt::toml::ValueIterator</compoundname>
    <includes refid="_value_iterator_8hpp" local="no">erbsland/qt/toml/ValueIterator.hpp</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classerbsland_1_1qt_1_1toml_1_1_value_iterator_1a6af703b05c1b2ad892779f1d5adb26ff" prot="private" static="no">
        <type>std::forward_iterator_tag</type>
        <definition>using erbsland::qt::toml::ValueIterator::iterator_category =  std::forward_iterator_tag</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/qt/toml/ValueIterator.hpp" line="24" column="5" bodyfile="erbsland/qt/toml/ValueIterator.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classerbsland_1_1qt_1_1toml_1_1_value_iterator_1ad730e09c48378d7af866d70e37e8c0b4" prot="private" static="no">
        <type><ref refid="namespaceerbsland_1_1qt_1_1toml_1aab3cc5b714cc77d2d409a7ffd098c2e5" kindref="member">ValuePtr</ref></type>
        <definition>using erbsland::qt::toml::ValueIterator::value_type =  ValuePtr</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/qt/toml/ValueIterator.hpp" line="26" column="5" bodyfile="erbsland/qt/toml/ValueIterator.hpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classerbsland_1_1qt_1_1toml_1_1_value_iterator_1a20e47a8d0f2b22bb2dfb739fa4fca91a" prot="private" static="no">
        <type>std::ptrdiff_t</type>
        <definition>using erbsland::qt::toml::ValueIterator::difference_type =  std::ptrdiff_t</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/qt/toml/ValueIterator.hpp" line="28" column="5" bodyfile="erbsland/qt/toml/ValueIterator.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classerbsland_1_1qt_1_1toml_1_1_value_iterator_1a65a827fc54219c88df6acaa100aa234c" prot="private" static="no">
        <type><ref refid="namespaceerbsland_1_1qt_1_1toml_1aab3cc5b714cc77d2d409a7ffd098c2e5" kindref="member">ValuePtr</ref></type>
        <definition>using erbsland::qt::toml::ValueIterator::pointer =  ValuePtr</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/qt/toml/ValueIterator.hpp" line="30" column="5" bodyfile="erbsland/qt/toml/ValueIterator.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classerbsland_1_1qt_1_1toml_1_1_value_iterator_1ad74ab742b3eb7bc904711e976d6da2fb" prot="private" static="no">
        <type><ref refid="namespaceerbsland_1_1qt_1_1toml_1aab3cc5b714cc77d2d409a7ffd098c2e5" kindref="member">ValuePtr</ref></type>
        <definition>using erbsland::qt::toml::ValueIterator::reference =  ValuePtr</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/qt/toml/ValueIterator.hpp" line="32" column="5" bodyfile="erbsland/qt/toml/ValueIterator.hpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classerbsland_1_1qt_1_1toml_1_1_value_iterator_1aeceedf6e1a7d48a588516ce2b1983d6f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Value</definition>
        <argsstring></argsstring>
        <name>Value</name>
        <param>
          <type><ref refid="classerbsland_1_1qt_1_1toml_1_1_value" kindref="compound">Value</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/qt/toml/ValueIterator.hpp" line="20" column="5" bodyfile="erbsland/qt/toml/ValueIterator.hpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classerbsland_1_1qt_1_1toml_1_1_value_iterator_1a61036b4ccfc4a9cadc2201b94625e86f" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto operator==</definition>
        <argsstring>(const ValueIterator &amp;a, const ValueIterator &amp;b) noexcept -&gt; bool</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classerbsland_1_1qt_1_1toml_1_1_value_iterator" kindref="compound">ValueIterator</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classerbsland_1_1qt_1_1toml_1_1_value_iterator" kindref="compound">ValueIterator</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compare two iterators.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>The first iterator. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>The second iterator. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of the comparison. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/qt/toml/ValueIterator.hpp" line="66" column="17" bodyfile="erbsland/qt/toml/ValueIterator.cpp" bodystart="54" bodyend="56"/>
      </memberdef>
      <memberdef kind="friend" id="classerbsland_1_1qt_1_1toml_1_1_value_iterator_1a5be9a12809a3b72f9d516eabad5e851b" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto operator!=</definition>
        <argsstring>(const ValueIterator &amp;a, const ValueIterator &amp;b) noexcept -&gt; bool</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classerbsland_1_1qt_1_1toml_1_1_value_iterator" kindref="compound">ValueIterator</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classerbsland_1_1qt_1_1toml_1_1_value_iterator" kindref="compound">ValueIterator</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compare two iterators.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>The first iterator. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>The second iterator. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The result of the comparison. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/qt/toml/ValueIterator.hpp" line="68" column="17" bodyfile="erbsland/qt/toml/ValueIterator.cpp" bodystart="59" bodyend="61"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classerbsland_1_1qt_1_1toml_1_1_value_iterator_1a834de40321c14fb933b3cfb09a27591d" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t erbsland::qt::toml::ValueIterator::_index</definition>
        <argsstring></argsstring>
        <name>_index</name>
        <initializer>{}</initializer>
        <briefdescription>
<para>The current index in the array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/qt/toml/ValueIterator.hpp" line="71" column="17" bodyfile="erbsland/qt/toml/ValueIterator.hpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classerbsland_1_1qt_1_1toml_1_1_value_iterator_1ae9cf61ccdb087243a52cc1cd6b428f92" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceerbsland_1_1qt_1_1toml_1aab3cc5b714cc77d2d409a7ffd098c2e5" kindref="member">ValuePtr</ref></type>
        <definition>ValuePtr erbsland::qt::toml::ValueIterator::_value</definition>
        <argsstring></argsstring>
        <name>_value</name>
        <initializer>{}</initializer>
        <briefdescription>
<para>The value that contains the array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/qt/toml/ValueIterator.hpp" line="72" column="14" bodyfile="erbsland/qt/toml/ValueIterator.hpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classerbsland_1_1qt_1_1toml_1_1_value_iterator_1a611c1f8479d6b92db361d70f6913a096" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>erbsland::qt::toml::ValueIterator::ValueIterator</definition>
        <argsstring>() noexcept=default</argsstring>
        <name>ValueIterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create an empty iterator that does not point to an array. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/qt/toml/ValueIterator.hpp" line="37" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classerbsland_1_1qt_1_1toml_1_1_value_iterator_1aaa58e3158d0bbaf9f8654083584748cd" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto erbsland::qt::toml::ValueIterator::operator*</definition>
        <argsstring>() const noexcept -&gt; reference</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Access the value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/qt/toml/ValueIterator.hpp" line="47" column="10" bodyfile="erbsland/qt/toml/ValueIterator.cpp" bodystart="20" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classerbsland_1_1qt_1_1toml_1_1_value_iterator_1a1dfece46ce534a4e7d03b346a75a07b3" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto erbsland::qt::toml::ValueIterator::operator-&gt;</definition>
        <argsstring>() noexcept -&gt; pointer</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Access the value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/qt/toml/ValueIterator.hpp" line="50" column="10" bodyfile="erbsland/qt/toml/ValueIterator.cpp" bodystart="28" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classerbsland_1_1qt_1_1toml_1_1_value_iterator_1ace3ddf157c05a3dce459ab341eb66133" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto erbsland::qt::toml::ValueIterator::operator++</definition>
        <argsstring>() noexcept -&gt; ValueIterator &amp;</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Increment the iterator. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/qt/toml/ValueIterator.hpp" line="54" column="10" bodyfile="erbsland/qt/toml/ValueIterator.cpp" bodystart="36" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classerbsland_1_1qt_1_1toml_1_1_value_iterator_1ad84561f0544f0857dde3b00706815494" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto erbsland::qt::toml::ValueIterator::operator++</definition>
        <argsstring>(int) noexcept -&gt; ValueIterator</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Increment the iterator. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/qt/toml/ValueIterator.hpp" line="58" column="10" bodyfile="erbsland/qt/toml/ValueIterator.cpp" bodystart="44" bodyend="51"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classerbsland_1_1qt_1_1toml_1_1_value_iterator_1aacd22b495776cf6aef013943fec8b5de" prot="private" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>erbsland::qt::toml::ValueIterator::ValueIterator</definition>
        <argsstring>(ValuePtr value, std::size_t index) noexcept</argsstring>
        <name>ValueIterator</name>
        <param>
          <type><ref refid="namespaceerbsland_1_1qt_1_1toml_1aab3cc5b714cc77d2d409a7ffd098c2e5" kindref="member">ValuePtr</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create an interator from a value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="erbsland/qt/toml/ValueIterator.hpp" line="42" column="5" bodyfile="erbsland/qt/toml/ValueIterator.cpp" bodystart="15" bodyend="17"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>An iterator to iterate over an array value. </para>
    </detaileddescription>
    <location file="erbsland/qt/toml/ValueIterator.hpp" line="19" column="1" bodyfile="erbsland/qt/toml/ValueIterator.hpp" bodystart="19" bodyend="73"/>
    <listofallmembers>
      <member refid="classerbsland_1_1qt_1_1toml_1_1_value_iterator_1a834de40321c14fb933b3cfb09a27591d" prot="private" virt="non-virtual"><scope>erbsland::qt::toml::ValueIterator</scope><name>_index</name></member>
      <member refid="classerbsland_1_1qt_1_1toml_1_1_value_iterator_1ae9cf61ccdb087243a52cc1cd6b428f92" prot="private" virt="non-virtual"><scope>erbsland::qt::toml::ValueIterator</scope><name>_value</name></member>
      <member refid="classerbsland_1_1qt_1_1toml_1_1_value_iterator_1a20e47a8d0f2b22bb2dfb739fa4fca91a" prot="private" virt="non-virtual"><scope>erbsland::qt::toml::ValueIterator</scope><name>difference_type</name></member>
      <member refid="classerbsland_1_1qt_1_1toml_1_1_value_iterator_1a6af703b05c1b2ad892779f1d5adb26ff" prot="private" virt="non-virtual"><scope>erbsland::qt::toml::ValueIterator</scope><name>iterator_category</name></member>
      <member refid="classerbsland_1_1qt_1_1toml_1_1_value_iterator_1a5be9a12809a3b72f9d516eabad5e851b" prot="public" virt="non-virtual"><scope>erbsland::qt::toml::ValueIterator</scope><name>operator!=</name></member>
      <member refid="classerbsland_1_1qt_1_1toml_1_1_value_iterator_1aaa58e3158d0bbaf9f8654083584748cd" prot="public" virt="non-virtual"><scope>erbsland::qt::toml::ValueIterator</scope><name>operator*</name></member>
      <member refid="classerbsland_1_1qt_1_1toml_1_1_value_iterator_1ace3ddf157c05a3dce459ab341eb66133" prot="public" virt="non-virtual"><scope>erbsland::qt::toml::ValueIterator</scope><name>operator++</name></member>
      <member refid="classerbsland_1_1qt_1_1toml_1_1_value_iterator_1ad84561f0544f0857dde3b00706815494" prot="public" virt="non-virtual"><scope>erbsland::qt::toml::ValueIterator</scope><name>operator++</name></member>
      <member refid="classerbsland_1_1qt_1_1toml_1_1_value_iterator_1a1dfece46ce534a4e7d03b346a75a07b3" prot="public" virt="non-virtual"><scope>erbsland::qt::toml::ValueIterator</scope><name>operator-&gt;</name></member>
      <member refid="classerbsland_1_1qt_1_1toml_1_1_value_iterator_1a61036b4ccfc4a9cadc2201b94625e86f" prot="public" virt="non-virtual"><scope>erbsland::qt::toml::ValueIterator</scope><name>operator==</name></member>
      <member refid="classerbsland_1_1qt_1_1toml_1_1_value_iterator_1a65a827fc54219c88df6acaa100aa234c" prot="private" virt="non-virtual"><scope>erbsland::qt::toml::ValueIterator</scope><name>pointer</name></member>
      <member refid="classerbsland_1_1qt_1_1toml_1_1_value_iterator_1ad74ab742b3eb7bc904711e976d6da2fb" prot="private" virt="non-virtual"><scope>erbsland::qt::toml::ValueIterator</scope><name>reference</name></member>
      <member refid="classerbsland_1_1qt_1_1toml_1_1_value_iterator_1aeceedf6e1a7d48a588516ce2b1983d6f" prot="private" virt="non-virtual"><scope>erbsland::qt::toml::ValueIterator</scope><name>Value</name></member>
      <member refid="classerbsland_1_1qt_1_1toml_1_1_value_iterator_1ad730e09c48378d7af866d70e37e8c0b4" prot="private" virt="non-virtual"><scope>erbsland::qt::toml::ValueIterator</scope><name>value_type</name></member>
      <member refid="classerbsland_1_1qt_1_1toml_1_1_value_iterator_1a611c1f8479d6b92db361d70f6913a096" prot="public" virt="non-virtual"><scope>erbsland::qt::toml::ValueIterator</scope><name>ValueIterator</name></member>
      <member refid="classerbsland_1_1qt_1_1toml_1_1_value_iterator_1aacd22b495776cf6aef013943fec8b5de" prot="private" virt="non-virtual"><scope>erbsland::qt::toml::ValueIterator</scope><name>ValueIterator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
